Referee: 1

Recommendation: Needs Major Revision

Comments:
Try to add some clear examples. Provide more background on the 
theory, please.

I think the topic could be very interesting, if presented properly.

AUTHORS: We tried to restructure the presentation.
Sections 1 and 2 are intended to serve as a
very simple and broad tutorial on the method. We give all
the basic definitions and try to illustrate each
definition with an example. We also try to give
a step by step description of the first proof.
We hope that this will convince the reader of 
every background that encoding arguments are a
worthwhile approach of to probabilistic proofs.

In the remaining sections, we give a broader survey
of areas where the encoding argument can be applied
successfully. This is supposed to serve as an overview to
readers broadly familiar with the main concepts of
discrete mathematics and theoretical computer science,
and to convince them that encoding arguments are
a useful tool for teaching and research. At this
point, due to space constraints, we regrettably
need to be brief about the background and focus
on a more expert audience.


Is the information in the paper sound, factual, and accurate?: No

If not, please explain why: I am saying no, not because I know 
it to be false, but rather because the paper has deficiencies 
in making the material clear to the reader.

As a tutorial, I would expect it to be self-contained. 
I would also expect it to provide sufficient background 
and context for the reader to follow the write-up. It 
would help to provide either applications or a clearer 
context in terms of complexity theory.

For example, they mention their topic as a way of providing 
insights for Kolmogorow complexity (KC). But in their 
description they provide no background on KC. Nor do they 
prove their assertions about KC. I would have enjoyed 
seeing how their encoding makes a practical application of the KC ideas.

Also, in terms of a survey, I do not see how this 
relates to other people's work. Has anyone done related 
work, or used this for practical applications?

AUTHORS: We tried to restructure the presentation to
address these concerns. The first two sections
aim to provide ample and well-illustrated background
on the method. Unfortunately, in the later
sections, we need to be brief. In particular,
including a detailed discussion onf Kolmogorov
complexity would by far exceed the 35-page limit, 
space that we would rather dedicate to demonstrating
the wealth of examples where the technique is applicable.

Is the treatment of the subject complete?: No

If not, what important details/ideas/analyses are missing?: The 
argument for the paper is that most CS students have inadequate 
background in probability. This may, or may not, be true. 
But, I doubt that any students I have had contact with would 
understand this paper better than a probabilistic analysis.

As a tutorial, it should be easier to follow. Comparing 
probabilistic analysis to this would be very useful. I 
was interested in the entropy discussion, but I found it too hard to follow.

AUTHORS: There is a comparison in the tutorial section 2.3.
  For the later sections, we believe that many of the probabilistic
  arguments are textbook material. A more detailed comparison
  would be very nice, but we are afraid it would exceed the scope
  of the survey.

=====================================

Referee: 2

Recommendation: Accept

Comments:
Many probabilistic analysis problems can be converted to an algorithmic
problems.  Thus encoding arguments are important in such cases. They are 
easy to understand and yields stronger results. They have found wide 
variety of applications. This survey presents basics on encoding 
arguments by first discussing uniform encoding lemma and then 
showing how it can be applied to different problems. Later 
a generalization of encoding lemma is discussed with
more applications. The paper concludes with further research directions.

The paper is well written and I am happy to see that it is accessible 
to even undergraduate students. The paper summarizes in a beautiful 
way key ideas of the area and its applications. Many computer 
scientists would like to read it.

It deserves the publication.

AUTHORS: Thank you very much for your supportive and
encouraging review.

=======================================

Referee: 3

Recommendation: Needs Minor Revision

Comments:
Very good Tutorial Paper.   A suggestion is 
giving the whole picture more clear in the 
abstract, and summarize how the paper be 
organized, so that readers might not lost 
in the long list of applications and proof.

AUTHORS: We have revised the abstract to be
more encompassing, and we have also extended
the survey in section 1 to be more detailed.


Is the treatment of the subject complete?: Yes

If not, what important details/ideas/analyses are missing?: I 
think the treatment of subject is complete in this 
survey paper, while obviously the authors did not 
(and which is not necessary) list all the applications and
gave proof.

If briefly list other potential applicable applications, 
even without proof, just mentioned them before summary 
section, which might help readers have a more clearly 
idea of the whole picture.

AUTHORS: We added a short reference to average-case
analysis and communication complexity to the summary section.
=======================================

Referee: 4

Recommendation: Needs Minor Revision

Comments:
The paper surveys "encoding arguments", and use 
a basic "Uniform Encoding Lemma" to infer many 
essential theorems such as Chernoff Bound, some 
hash algorithms, Bipartite Expanders, Permutations 
and Binary Search Trees, k-SAT and Lovasz Local 
Lemma, Graphs, etc.  The term "encoding arguments" 
seems not usual in computer science, in fact, 
the paper surveys applications of the "Uniform 
Encoding Lemma".

AUTHORS: We tried to be more specific with our terminology
in the abstract. 

1. The citation seems not consistent with the 
reference list, the citation is represented by 
the number while the reference is not.

AUTHORS: Fixed.

2. All the definitions in Section 2.1 use many 
sentences which are hard to follow and revisit, and 
I personally prefer a list such as "{0,1}^k: the 
set of all binary strings of length k ", "|x|: the 
length of x", etc.

AUTHORS: We tried to change the presentation 
accordingly.

3. page 3 line 22, partial code and partial 
function are not illustrated.

AUTHORS: We tried to add some examples.
4. page 3 line 26, string z such that xz=y, 
please define "xz".

AUTHORS: Done.

5. page 3 line 25-31, it seems that the symbol 

x and y denote both domain and range of C, which 
is confusing.

AUTHORS: We restructured the presentation in Section 2.
Does it make more sense now?

6. The construction of some expressions of |C(*)| 
are not clearly explained, such as page 11 line 41 |C(b)|, 
page 15 line 41 |C(G)|, page 28 line 46 |C(G)|, etc.

AUTHORS: We tried to provide more details for the
  instances mentioned in the comment and at other 
  places where it seemed approporiate to us.
